{
  "openapi": "3.0.2",
  "info": {
    "title": "Basic user profile information",
    "description": "Data product for basic user profile information",
    "version": "0.0.1"
  },
  "paths": {
    "/test/lassipatanen/User/Profile": {
      "post": {
        "summary": "Basic user profile information",
        "description": "Data product for basic user profile information",
        "operationId": "request_test_lassipatanen_User_Profile",
        "parameters": [
          {
            "description": "Optional consent token",
            "required": false,
            "schema": {
              "title": "X-Consent-Token",
              "type": "string",
              "description": "Optional consent token"
            },
            "name": "x-consent-token",
            "in": "header"
          },
          {
            "description": "The login token. Value should be \"Bearer [token]\"",
            "required": false,
            "schema": {
              "title": "Authorization",
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\""
            },
            "name": "authorization",
            "in": "header"
          },
          {
            "description": "The bare domain of the system that provided the token.",
            "required": false,
            "schema": {
              "title": "X-Authorization-Provider",
              "type": "string",
              "description": "The bare domain of the system that provided the token."
            },
            "name": "x-authorization-provider",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "444": {
            "description": "Additional Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            }
          },
          "550": {
            "description": "Additional Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "title": "Address",
        "type": "object",
        "properties": {
          "streetAddress": {
            "title": "Street address",
            "type": "string",
            "description": "Street address",
            "nullable": true,
            "examples": "Mannerheimintie 42"
          },
          "zipCode": {
            "title": "ZIP code",
            "maxLength": 5,
            "minLength": 5,
            "type": "string",
            "description": "ZIP code of the address",
            "nullable": true,
            "examples": "00100"
          },
          "city": {
            "title": "City",
            "type": "string",
            "description": "City of the address location",
            "nullable": true,
            "examples": "Helsinki"
          },
          "country": {
            "title": "Country",
            "type": "string",
            "description": "Country of the address",
            "nullable": true,
            "examples": "Suomi"
          }
        }
      },
      "BadGateway": {
        "title": "BadGateway",
        "type": "object",
        "properties": {},
        "description": "This response is reserved by Product Gateway."
      },
      "DataSourceError": {
        "title": "DataSourceError",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "DataSourceNotFound": {
        "title": "DataSourceNotFound",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "title": "DoesNotConformToDefinition",
        "required": ["data_source_status_code"],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "title": "Data source status code",
            "type": "integer",
            "description": "HTTP status code returned from the data source"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "EmploymentType": {
        "title": "EmploymentType",
        "enum": ["permanent", "temporary", "seasonal", "summerJob"],
        "type": "string",
        "description": "An enumeration."
      },
      "Forbidden": {
        "title": "Forbidden",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "GatewayTimeout": {
        "title": "GatewayTimeout",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "Gender": {
        "title": "Gender",
        "enum": ["Male", "Female", "Other"],
        "type": "string",
        "description": "An enumeration."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "NotFound": {
        "title": "NotFound",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "Occupation": {
        "title": "Occupation",
        "type": "object",
        "properties": {
          "escoIdentifier": {
            "title": "ESCO identifier",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The identifier of the occupation in which the user has previously worked. The identifier is based on European Standard Classification of Occupations (ESCO).",
            "format": "uri",
            "nullable": true,
            "examples": "http://data.europa.eu/esco/occupation/000e93a3-d956-4e45-aacb-f12c83fedf84"
          },
          "escoCode": {
            "title": "ESCO code",
            "type": "string",
            "description": "The code of the occupation in which the user has previously worked. The code based on European Standard Classification of Occupations (ESCO).",
            "nullable": true,
            "examples": "2654.1.7"
          },
          "naceCode": {
            "title": "NACE code",
            "type": "string",
            "description": "The industry field where the person has worked on. The codes are based on the Statistical classification of economic activities in the European Community, abbreviated as NACE.",
            "nullable": true,
            "examples": "62.01"
          },
          "workExperience": {
            "title": "Work experience in years",
            "type": "integer",
            "description": "The number of months that the person has experience in the specific occupation",
            "nullable": true,
            "examples": 5
          }
        }
      },
      "ProfileRequest": {
        "title": "ProfileRequest",
        "type": "object",
        "properties": {}
      },
      "ProfileResponse": {
        "title": "ProfileResponse",
        "required": ["id", "created", "modified", "address", "jobTitles", "regions"],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "uuid formatted string used to identify users",
            "format": "uuid",
            "examples": "cf57432e-809e-4353-adbd-9d5c0d733868"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "description": "Created at timestamp",
            "format": "date-time",
            "examples": "2042-04-23T10:20:30.400"
          },
          "modified": {
            "title": "Modified",
            "type": "string",
            "description": "Modified at timestamp",
            "format": "date-time",
            "examples": "2042-04-23T10:20:30.400"
          },
          "firstName": {
            "title": "First name",
            "type": "string",
            "description": "First name of the user",
            "nullable": true,
            "examples": "John"
          },
          "lastName": {
            "title": "Last name",
            "type": "string",
            "description": "Last name of the user",
            "nullable": true,
            "examples": "Doe"
          },
          "address": {
            "title": "Address",
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "Address of the user"
          },
          "dateOfBirth": {
            "title": "Date of birth",
            "type": "string",
            "description": "Date of Birth (date only)",
            "format": "date",
            "nullable": true,
            "examples": "2000-01-01"
          },
          "gender": {
            "title": "Gender",
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ],
            "description": "Gender of the user",
            "nullable": true
          },
          "countryOfBirthCode": {
            "title": "Country of birth code",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "ISO 3166-1 alpha-2 code for country",
            "nullable": true,
            "examples": "FI"
          },
          "nativeLanguageCode": {
            "title": "Native language code",
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "ISO 639-3 code for language",
            "nullable": true,
            "examples": "fin"
          },
          "occupationCode": {
            "title": "Occupation code",
            "type": "string",
            "description": "Code scheme for occupation. Full set of codes can be found at https://koodistot.suomi.fi/codelist-api/api/v1/coderegistries/jhs/codeschemes/ammatti_1_20100101/codes/",
            "nullable": true,
            "examples": "11122"
          },
          "occupations": {
            "title": "Occupations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            },
            "description": "The work history of a person with a list of occupations, related industry fields, employer and the duration of a specific work experience.",
            "nullable": true
          },
          "workPreferences": {
            "title": "Working preferences",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkPreferences"
              }
            ],
            "nullable": true
          },
          "citizenshipCode": {
            "title": "Nationality code",
            "maxLength": 2,
            "minLength": 2,
            "type": "string",
            "description": "ISO 3166-1 alpha-2 code for nationality",
            "nullable": true,
            "examples": "FI"
          },
          "jobTitles": {
            "title": "Job titles",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of job titles",
            "examples": ["Chef", "Programmer"]
          },
          "regions": {
            "title": "Regions",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of regions where user would want to search for a job",
            "examples": ["Etelä-Suomi"]
          }
        }
      },
      "ServiceUnavailable": {
        "title": "ServiceUnavailable",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "title": "Unauthorized",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "WorkPreferences": {
        "title": "WorkPreferences",
        "type": "object",
        "properties": {
          "preferredRegion": {
            "title": "Preferred region",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of regions from where the user would like to search for jobs",
            "nullable": true,
            "examples": ["01"]
          },
          "preferredMunicipality": {
            "title": "Preferred municipality",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of municipalities from where the user would like to search for jobs",
            "nullable": true,
            "examples": ["091"]
          },
          "typeOfEmployment": {
            "title": "Type of employment",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmploymentType"
              }
            ],
            "description": "The type of employment contract that the person is looking for.",
            "nullable": true,
            "examples": "summerJob"
          },
          "workingTime": {
            "title": "Working Time",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkingTime"
              }
            ],
            "description": "The preferred working time that the person is looking for based on the national [working time codes](https://koodistot.suomi.fi/codescheme;registryCode=dataecon;schemeCode=permit).",
            "nullable": true,
            "examples": "03"
          },
          "workingLanguage": {
            "title": "Working Language",
            "type": "string",
            "description": "The preferred list of working languages identified by the ISO 639-1 standard (Alpha-2).",
            "nullable": true,
            "examples": "fi"
          },
          "created": {
            "title": "Created at timestamp",
            "type": "string",
            "description": "Timestamp for when the work preferences were first saved",
            "format": "date-time",
            "nullable": true,
            "examples": "2042-04-23T10:20:30.400"
          },
          "modified": {
            "title": "Modified at timestamp",
            "type": "string",
            "description": "Timestamp for when the work preferences were last modified",
            "format": "date-time",
            "nullable": true,
            "examples": "2042-04-23T10:20:30.400"
          }
        }
      },
      "WorkingTime": {
        "title": "WorkingTime",
        "enum": ["01", "02", "03", "04", "05", "06", "07", "08"],
        "type": "string",
        "description": "An enumeration."
      }
    }
  }
}
